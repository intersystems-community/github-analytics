<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="GitHub.OrganizationPage">
<Description><![CDATA[
Page github.com/<var>organization<var> with organization's and general repositories's info ]]></Description>
<Abstract>1</Abstract>
<Super>%RegisteredObject</Super>
<TimeCreated>63913,80067.816326</TimeCreated>

<Parameter name="SERVER">
<Description>
Repositories imported from</Description>
<Default>github.com</Default>
</Parameter>

<Parameter name="RepositoriesTableEnd">
<Default><![CDATA[<div class="paginate-container" data-pjax>]]></Default>
</Parameter>

<Parameter name="RepositoryBegin">
<Description>
repository's table begin</Description>
<Default><![CDATA[<div class="repo-list-item]]></Default>
</Parameter>

<Property name="request">
<Type>%Net.HttpRequest</Type>
<Private>1</Private>
</Property>

<Property name="Organization">
<Description>
Organization's name</Description>
<InitialExpression>"intersystems-ru"</InitialExpression>
</Property>

<Property name="Num">
<Description>
This page number</Description>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="pos">
<Description>
current position in content</Description>
<Type>%Integer</Type>
<Private>1</Private>
</Property>

<Method name="%OnNew">
<FormalSpec>organization,num</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	set ..Organization = $get(organization)
	set ..Num = $get(num)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="Url">
<Description>
Build url path for current page</Description>
<CodeMode>expression</CodeMode>
<Implementation><![CDATA["/"_..Organization_"?page="_..Num
]]></Implementation>
</Method>

<Property name="Html">
<Description>
Html content of current page</Description>
<Type>%Stream.FileCharacter</Type>
<ReadOnly>1</ReadOnly>
</Property>

<Method name="HtmlGet">
<Description>
getter</Description>
<ReturnType>%Stream</ReturnType>
<Implementation><![CDATA[
	Quit:'$IsObject(..request) ""
	set strm = ##class(%Stream.FileCharacter).%New()
	set sc = strm.CopyFrom( ..request.HttpResponse.Data )
	Quit strm
]]></Implementation>
</Method>

<Method name="Get">
<Description>
Load page content from "github.com/{organization}?page={num}"</Description>
<FormalSpec>organization="",num=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if $get(organization)'="" set ..Organization = organization
	if $get(num)'="" set ..Num = num
	
	
	set sc = ..request.Get( ..Url() ) Quit:'sc sc
		
	Quit 1
]]></Implementation>
</Method>

<Method name="GetPage">
<Description>
Return repositories page parser</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[organization="intersystems-ru",num="1",&sc,&session]]></FormalSpec>
<ReturnType>OrganizationPage</ReturnType>
<Implementation><![CDATA[
	set page = ..%New(organization, num)
	
	set page.request = ##class(%Net.HttpRequest).%New()
	
	set sslConfigName = ..#SERVER
	set page.request.Server = sslConfigName
	set sc = ##class(SSL.Configuration).SSLConfig( sslConfigName ) if 'sc {
		write !, "SSLConfig error: ", sc 	
	}
	set page.request.SSLConfiguration = sslConfigName
	set page.request.Https=1
	
	#define g(%prop) $get(session(%prop))	
	if $get(session) '= "" {
		set sc = page.request.InsertCookie($$$g("name"),$$$g("value"),$$$g("path"),..#SERVER,$$$g("expires"),$$$g("secure"))
		}
		
	set sc = page.Get() 
	Quit:'sc ""
	
	Quit page
]]></Implementation>
</Method>

<Method name="GetPages">
<Description><![CDATA[
Parse pages count from repositories page
Search line: "<div class="pagination"><span class="previous_page disabled">Previous</span> <em class="current">1</em> 
<a rel="next" href="/intersystems-ru?page=2">2</a> <a href="/intersystems-ru?page=3">3</a> 
<a href="/intersystems-ru?page=4">4</a> <a class="next_page" rel="next" href="/intersystems-ru?page=2">Next</a></div>"
And extract data from penult available page link]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>html:%Stream.FileCharacter</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	
	set end = html.FindAt( 1, ..#RepositoriesTableEnd ) 
	set begin = html.FindAt( end , "<div class=""pagination"">"  )
	Quit:begin=-1 1 ;if there is no pages, then it have only 1 page
	set sc = html.MoveTo( begin ) 
	set str = html.ReadLine()
	set list = $LFS( str,"</a>")
	set penult = $LG( list, $ll( list ) - 2 ) ; "<a href="/intersystems-ru?page=4">4"
	set count = $piece( penult, ">", *) ;4
	Quit +count
]]></Implementation>
</Method>

<Method name="Pages">
<Description>
Pages count from this page</Description>
<CodeMode>expression</CodeMode>
<Implementation><![CDATA[..GetPages( ..Html )
]]></Implementation>
</Method>

<Method name="Parse">
<Description>
Move from repositories table begin to the end of table</Description>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	set html = ..Html 
	do html.Rewind()
	set ..pos=0
	
	set pos = html.FindAt( 1, ..#RepositoryBegin ) 
    if pos = -1 {
	    set sc = $$$ERROR(,"Not found begin of repositories table") Quit 0
    }
	set ..pos = pos
    set pos = pos + $length( ..#RepositoryBegin )
    
    set end = html.FindAt( pos, ..#RepositoriesTableEnd ) 
    if end = -1 {
	    set sc = $$$ERROR(,"Not found end of repositories table") Quit 0
    }
	
	set sc = html.MoveTo( pos ) Quit:'sc ""
	
	while pos < end {
		
		set pos = html.FindAt( pos, ..#RepositoryBegin ) Quit:pos=-1
		set sc = ..repositoryBegin( pos ) Quit:'sc 
		set pos = pos + $length(..#RepositoryBegin) ;offset
		
	}
	if sc && ( ..pos < end) {
		set sc = ..repositoryBegin( end ) ;for last topic	
	}
	Quit sc
]]></Implementation>
</Method>

<Method name="repositoryBegin">
<Description>
found begin of repository in html content</Description>
<FormalSpec>pos:%Integer</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set html = ..Html 
	
	set sc = html.MoveTo( ..pos ), length = pos - ..pos 
	set repositoryHtml = html.Read( .length )
	set ..pos = pos
	
	/* Example of repository content
	<div class="repo-list-item public fork" itemprop="owns" itemscope itemtype="http://schema.org/Code">
	    <div class="repo-list-stats">
	        <span itemprop="programmingLanguage">
	          JavaScript
	        </span>
	      <a class="repo-list-stat-item tooltipped tooltipped-s" href="/intersystems/UMLExplorer/stargazers" aria-label="Stargazers">
	        <span class="octicon octicon-star "></span>
	        1
	      </a>
	      <a class="repo-list-stat-item tooltipped tooltipped-s" href="/intersystems/UMLExplorer/network"  aria-label="Forks">
	        <span class="octicon octicon-git-branch "></span>
	        3
	      </a>
	    </div>
	    <h3 class="repo-list-name">
	      <a href="/intersystems/UMLExplorer" itemprop="name codeRepository">
	        UMLExplorer</a>
	    </h3>
	      <p class="repo-list-info">
	        <span class="octicon octicon-repo-forked "></span>
	        forked from <a href="/intersystems-ru/UMLExplorer">intersystems-ru/UMLExplorer</a>
	      </p>
	      <p class="repo-list-description" itemprop="description">
	        UML Class diagram viewer for Cache classes
	      </p>
	    <p class="repo-list-meta">
	        Updated <time datetime="2015-11-06T13:32:33Z" is="relative-time">Nov 6, 2015</time>
	    </p>
	    <div class="participation-graph">
	      <poll-include-fragment src="/intersystems/UMLExplorer/graphs/participation?h=100&amp;w=640"></poll-include-fragment>
		</div>
	</div>*/
    
    set repository( "Type" ) = ..ParseType( repositoryHtml )
    set repository( "Stars" ) = ..ParseStars( repositoryHtml )
	set repository( "Forks" ) = ..ParseForks( repositoryHtml )
	set repository( "Name" ) = ..ParseName( repositoryHtml )
	set repository( "Description" ) = ..ParseDescription( repositoryHtml )
	set repository( "Updated" ) = ..ParseUpdated( repositoryHtml )
	
	
	Quit ..OnRepository( .repository )
]]></Implementation>
</Method>

<Method name="ParseType">
<Description><![CDATA[
Extract private or public repository
<div class="repo-list-item public fork" itemprop="owns" itemscope itemtype="http://schema.org/Code">]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>repository:%String</FormalSpec>
<Implementation><![CDATA[
	set type = $piece( repository, ..#RepositoryBegin_" ", 2 )	
	set type = $piece( type, " ")
	set type = $zstrip( type, "<>WC" )
	Quit type
]]></Implementation>
</Method>

<Method name="ParseStars">
<Description><![CDATA[
Extract amount of stars
<a class="repo-list-stat-item tooltipped tooltipped-s" href="/intersystems-ru/LightPivotTable/stargazers" aria-label="Stargazers">
<span class="octicon octicon-star "></span>
2
</a>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>repository:%String</FormalSpec>
<Implementation><![CDATA[
	set stars = $piece( repository, "<span class=""octicon octicon-star ""></span>", 2 )	
	set stars = $piece( stars, "</a>")
	set stars = $zstrip( stars, "<>WC" )
	Quit +stars
]]></Implementation>
</Method>

<Method name="ParseForks">
<Description><![CDATA[
Extract amount of forks
<a class="repo-list-stat-item tooltipped tooltipped-s" href="/intersystems-ru/LightPivotTable/network"  aria-label="Forks">
<span class="octicon octicon-git-branch "></span>
3
</a>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>repository:%String</FormalSpec>
<Implementation><![CDATA[
	set forks = $piece( repository, "<span class=""octicon octicon-git-branch ""></span>", 2 )	
	set forks = $piece( forks, "</a>")
	set forks = $zstrip( forks, "<>WC" )
	Quit +forks
]]></Implementation>
</Method>

<Method name="ParseName">
<Description><![CDATA[
Extract name of repository
<h3 class="repo-list-name">
<a href="/intersystems-ru/LightPivotTable" itemprop="name codeRepository">
LightPivotTable</a>
</h3>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>repository:%String</FormalSpec>
<Implementation><![CDATA[
	set name = $piece( repository, "<h3 class=""repo-list-name"">", 2 )	
	set name = $piece( name, "</a>")
	set name = $piece( name, ">",2)
	set name = $zstrip( name, "<>WC" )
	Quit name
]]></Implementation>
</Method>

<Method name="ParseDescription">
<Description><![CDATA[
Extract description
<p class="repo-list-description" itemprop="description">
Lightweight pivot table representation for MDX2JSON source for InterSystems Cache
</p>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>repository:%String</FormalSpec>
<Implementation><![CDATA[
	set description = $piece( repository, "itemprop=""description"">", 2 )	
	set description = $piece( description, "</p>")
	set description = $zstrip( description, "<>WC" )
	Quit description
]]></Implementation>
</Method>

<Method name="ParseUpdated">
<Description><![CDATA[
Extract date and time of last update
Make it Moscow timezone and convert it odbc format
<p class="repo-list-meta">
Updated <time datetime="2015-12-19T21:59:35Z" is="relative-time">Dec 19, 2015</time>
</p>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>repository:%String</FormalSpec>
<Implementation><![CDATA[
	set updated = $piece( repository, "<time datetime=""", 2)
	set updated = $piece( updated, "Z""") ;2015-12-19T21:59:35
	
	set date = $piece( updated,"T"), date = $zstrip(date, "<>WC" ) ;2015-12-19
	set time = $piece( updated,"T",2), time = $zstrip(time, "<>WC" ) ;21:59:35
	
	set dateh = $zdh( date, 3) 
	set timeh = $zth( time )
	
	#; Making Moscow timezone, eg adding 3 hours
	if timeh >= 75600{			;if time more than 21:00:00 
		set timeh = timeh - 75600 ;minus 21 hours
		set dateh = dateh + 1}
	else{						;if time fewer than 21:00:00
		set timeh = timeh + 10800	;plus 3 hours
		}
	
	set ts = $zdt( dateh_","_timeh, 3 ) ;odbc timestamp
	Quit ts
]]></Implementation>
</Method>

<Method name="OnRepository">
<Description><![CDATA[
Event handler 
<var>data</var> - key-value array with repository/organization properties 
If handler return 0, parsing will be interrupted]]></Description>
<Abstract>1</Abstract>
<FormalSpec><![CDATA[&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit 1
]]></Implementation>
</Method>

<Method name="Scan">
<Description>
Example scan across all forum topic pages</Description>
<Abstract>1</Abstract>
<ClassMethod>1</ClassMethod>
<FormalSpec>organization="inersistems-ru"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit 1
]]></Implementation>
</Method>

<Parameter name="OrganizationBegin">
<Description>
organization's table begin</Description>
<Default><![CDATA[<header class="org-header">]]></Default>
</Parameter>

<Parameter name="OrganizationEnd">
<Description>
organization's table end</Description>
<Default><![CDATA[</header>]]></Default>
</Parameter>

<Method name="ParseOrganization">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	set html = ..Html 
	do html.Rewind()
	
	set pos = html.FindAt( 1, ..#OrganizationBegin ) 
    if pos = -1 {
	    set sc = $$$ERROR(,"Not found begin of organization's table") Quit 0
    }
    set pos = pos + $length( ..#OrganizationBegin )
    
    set end = html.FindAt( pos, ..#OrganizationEnd ) 
    if end = -1 {
	    set sc = $$$ERROR(,"Not found end of organization's table") Quit 0
    }
	
	set sc = html.MoveTo( pos ) Quit:'sc 0
	set length = end - pos 
	set organizationHtml = html.Read( .length )
	
	/*Example of organization content
	<header class="org-header">
	  <div class="container">
	    <div class="flex-table org-header-wrapper">
	      <img alt="@intersystems-ru" class="flex-table-item avatar" height="100" itemprop="image" src="https://avatars0.githubusercontent.com/u/2911705?v=3&amp;s=200" width="100" />
	      <div class="flex-table-item flex-table-item-primary">
	        <h1 class="org-name">
	          <span>InterSystems Corp.</span>
	        </h1>
	          <ul class="org-header-meta has-blog has-email">
	              <li class="meta-item">
	                <span class="octicon octicon-link "></span>
	                <a href="http://www.intersystems.com/" class="meta-link" itemprop="url" title="http://www.intersystems.com/">http://www.intersystems.com/</a>
	              </li>
	              <li class="meta-item">
	                <span class="octicon octicon-mail "></span>
	                <a class="meta-link" href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;%69%6e%66%6f@%69%6e%74%65%72%73%79%73%74%65%6d%73.%72%75" itemprop="email">info@intersystems.ru</a>
	              </li>
	          </ul>
	      </div>
	    </div>
	    <nav class="pagehead-tabs" role="navigation">
	  <a class="pagehead-tabs-item selected" href="/intersystems-ru">
	    <span class="octicon octicon-repo "></span>
	    Repositories
	  </a>
	    <a class="pagehead-tabs-item " href="/orgs/intersystems-ru/people">
	      <span class="octicon octicon-organization "></span>
	      People
	      <span class="counter">75</span>
	    </a>
	    <a class="pagehead-tabs-item " href="/orgs/intersystems-ru/teams">
	      <span class="octicon octicon-jersey "></span>
	      Teams
	      <span class="counter">3</span>
	    </a>
	</nav>
	  </div>
	</header>*/
	
    if $find(organizationHtml,"<h1 class=""org-name"">") {
		set organization("FullName") = ..ParseOrgFullName(organizationHtml)
    	}
    if $find(organizationHtml,"<p class=""org-description""") {
		set organization("Description") = ..ParseOrgDescription(organizationHtml)
    	}
    if $find(organizationHtml,"has-blog") {
		set organization("OrgLink") = ..ParseOrgLink(organizationHtml)
    	}
    if $find(organizationHtml,"has-email") {
		set organization("eMail") = ..ParseOrgEMail(organizationHtml)
    	}
    if $find(organizationHtml,"People") {
	    set organization("People") = ..ParsePeople(organizationHtml)
    	}
    	
	Quit ..OnOrganization( .organization )
]]></Implementation>
</Method>

<Method name="ParseOrgFullName">
<Description><![CDATA[
Extract full name of organization
<h1 class="org-name">
<span>InterSystems Corp.</span>
</h1>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>organization:%String</FormalSpec>
<Implementation><![CDATA[
	set name = $piece( organization, "<h1 class=""org-name"">", 2 )	
	set name = $piece( name, "</span>")
	set name = $piece( name, "<span>",2)
	set name = $zstrip( name, "<>WC" )
	Quit name
]]></Implementation>
</Method>

<Method name="ParseOrgDescription">
<Description><![CDATA[
Extract description of organization
<p class="org-description" itemprop="description">Repositories related to the Python Programming language</p>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>organization:%String</FormalSpec>
<Implementation><![CDATA[
	set description = $piece( organization, "itemprop=""description"">", 2 )	
	set description = $piece( description, "</p>")
	set description = $zstrip( description, "<>WC" )
	Quit description
]]></Implementation>
</Method>

<Method name="ParseOrgLink">
<Description><![CDATA[
Extract link of organization
<li class="meta-item">
<span class="octicon octicon-link "></span>
<a href="http://www.intersystems.com/" class="meta-link" itemprop="url" title="http://www.intersystems.com/">http://www.intersystems.com/</a>
</li>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>organization:%String</FormalSpec>
<Implementation><![CDATA[
	set link = $piece( organization, "octicon-link ""></span>", 2 )	
	set link = $piece( link, "</a>")
	set link = $piece( link, ">", 2)
	set link = $zstrip( link, "<>WC" )
	Quit link
]]></Implementation>
</Method>

<Method name="ParseOrgEMail">
<Description><![CDATA[
Extract eamil of organization
<li class="meta-item">
<span class="octicon octicon-mail "></span>
<a class="meta-link" href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;%69%6e%66%6f@%69%6e%74%65%72%73%79%73%74%65%6d%73.%72%75" itemprop="email">info@intersystems.ru</a>
</li>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>organization:%String</FormalSpec>
<Implementation><![CDATA[
	set eMail = $piece( organization, "octicon-mail ""></span>", 2 )	
	set eMail = $piece( eMail, "</a>")
	set eMail = $piece( eMail, ">", 2)
	set eMail = $zstrip( eMail, "<>WC" )
	Quit eMail
]]></Implementation>
</Method>

<Method name="ParsePeople">
<Description><![CDATA[
Extract amount of organization's people
<a class="pagehead-tabs-item " href="/orgs/intersystems-ru/people">
<span class="octicon octicon-organization "></span>
People
<span class="counter">75</span>
</a>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>organization:%String</FormalSpec>
<Implementation><![CDATA[
	set people = $piece( organization, "People", 2 )	
	set people = $piece( people, "</span>")
	set people = $piece( people, ">", 2)
	set people = $zstrip( people, "<>WC" )
	Quit +people
]]></Implementation>
</Method>

<Method name="OnOrganization">
<Description><![CDATA[
Event handler 
<var>data</var> - key-value array with organization properties 
If handler return 0, parsing will be interrupted]]></Description>
<Abstract>1</Abstract>
<FormalSpec><![CDATA[&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit 1
]]></Implementation>
</Method>
</Class>
</Export>
