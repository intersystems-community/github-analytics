<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="GitHub.Organization">
<Description>
This class contain information about organization of repositories</Description>
<Super>%Persistent</Super>
<TimeCreated>63909,2427.981117</TimeCreated>

<Property name="Name">
<Type>%String</Type>
<Required>1</Required>
</Property>

<Index name="Name">
<Properties>Name</Properties>
<Unique>1</Unique>
</Index>

<Property name="FullName">
<Type>%String</Type>
</Property>

<Property name="eMail">
<Type>%String</Type>
</Property>

<Property name="OrgLink">
<Type>%String</Type>
</Property>

<Property name="Description">
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="Contributors">
<Type>GitHub.Contributor</Type>
<Cardinality>many</Cardinality>
<Inverse>Member</Inverse>
<Relationship>1</Relationship>
</Property>

<Property name="Repositories">
<Description>
organization's repositories collection</Description>
<Type>GitHub.Repository</Type>
<Cardinality>many</Cardinality>
<Inverse>Organization</Inverse>
<Relationship>1</Relationship>
</Property>

<Property name="People">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode> set {*} = ##class(GitHub.Organization).GetPeople({Name})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Method name="GetPeople">
<ClassMethod>1</ClassMethod>
<FormalSpec>name</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set sql = "Select Count(Id) As People From GitHub.Contributor Where Member->Name = ? "
	set rs = ##class(%SQL.Statement).%ExecDirect(,sql, name)
	if rs.%Next() {set result = rs.People}
	Quit result
]]></Implementation>
</Method>

<Property name="Link">
<Description>
url</Description>
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode> set {*} = ##class(GitHub.Organization).GetLink({Name})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Method name="GetLink">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>name</FormalSpec>
<Implementation><![CDATA[$select(name'="":"https://github.com/"_name,1:"")
]]></Implementation>
</Method>

<Method name="Insert">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&sql(
		Insert Into Github.Organization (Name, FullName, eMail, OrgLink, Description) 
		Values ( :data("Name"), :data("FullName"), :data("eMail")
		, :data("OrgLink"), :data("Description") )
	)
	if SQLCODE=0 {
		set data=%ROWID Quit 1
	}
	Quit $$$ERROR(,$system.SQL.SQLCODE( SQLCODE ))
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^GitHub.OrganizationD</DataLocation>
<DefaultData>OrganizationDefaultData</DefaultData>
<IdLocation>^GitHub.OrganizationD</IdLocation>
<IndexLocation>^GitHub.OrganizationI</IndexLocation>
<StreamLocation>^GitHub.OrganizationS</StreamLocation>
<Data name="OrganizationDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>FullName</Value>
</Value>
<Value name="4">
<Value>eMail</Value>
</Value>
<Value name="5">
<Value>OrgLink</Value>
</Value>
<Value name="6">
<Value>Description</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
