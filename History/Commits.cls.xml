<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="History.Commits">
<Super>%Persistent</Super>
<TimeCreated>63911,35415.804336</TimeCreated>

<Property name="Repository">
<Type>GitHub.Repository</Type>
<Cardinality>one</Cardinality>
<Inverse>HistoryCommits</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>
<OnDelete>cascade</OnDelete>
</Property>

<Property name="Amount">
<Type>%Integer</Type>
</Property>

<Property name="Date">
<Type>%TimeStamp</Type>
<SqlFieldName>DateOfData</SqlFieldName>
</Property>

<Method name="ParseCommitsHistory">
<Description>
Extract date and amount of commits
[{"days":[0,0,0,0,0,0,0],"total":0,"week":1419728400}...{"days":[0,0,0,0,0,0,0],"total":0,"week":1450569600}]</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[html:%String,&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set dateFirstStart = $find(html,"""week"":"), dateFirstEnd = $find(html,"}",dateFirstStart)-($length("}")+1)
	set data("FirstDate") = $extract(html,dateFirstStart,dateFirstEnd)
	set pos = $find(html,"days"), commits = ""
	while $find(html,"days",pos){
		set pos = $find(html,"[",pos), daysEnd = $find(html,"]",pos)-($length("]")+1)
		set commits = commits_","_$extract(html,pos,daysEnd)
		}
	
	set num = 0, pos = 1
	while $find(commits,",",pos){
		set pos = $find(commits,",",pos), num = num + 1
		set data(num) = $piece(commits, ",", (num+1))
		}

	Quit 1
]]></Implementation>
</Method>

<Method name="Insert">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	set start = 4070908800, secondsPerDay = 86400, sc = 1
	//$zd((start+date)/86400) = date of sunday - first day of week
	//End of week is saturday, date is seconds from <var>start<var>
	//86400 - senonds in 24 hours
	set num = 1, dateExternal = data("FirstDate")-secondsPerDay
	while $data(data(num)){
		set dateExternal = dateExternal + secondsPerDay
		Quit:((start+dateExternal)\secondsPerDay)>=(+$horolog) 
		set dateInternal = $zdt((start+dateExternal)\secondsPerDay,3)
		set commits = data(num)
		&sql(Insert Into History.Commits (Repository, Amount, DateOfData)
			Values (:data("RepositoryId"), :commits, :dateInternal))
		set sc = sc!SQLCODE
		Quit:SQLCODE
		set num = num + 1
	}
	kill data
	Quit sc
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^History.CommitsD</DataLocation>
<DefaultData>CommitsDefaultData</DefaultData>
<IdLocation>^History.CommitsD</IdLocation>
<IndexLocation>^History.CommitsI</IndexLocation>
<StreamLocation>^History.CommitsS</StreamLocation>
<Data name="CommitsDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Amount</Value>
</Value>
<Value name="3">
<Value>Date</Value>
</Value>
<Value name="4">
<Value>Repository</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
