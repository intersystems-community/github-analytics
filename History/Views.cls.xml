<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="History.Views">
<Super>%Persistent</Super>
<TimeCreated>63913,83016.197951</TimeCreated>

<Property name="Repository">
<Type>GitHub.Repository</Type>
<Cardinality>one</Cardinality>
<Inverse>HistoryViews</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>
<OnDelete>cascade</OnDelete>
</Property>

<Property name="Amount">
<Type>%Integer</Type>
</Property>

<Property name="UniqueVisitors">
<Type>%Integer</Type>
</Property>

<Property name="Date">
<Type>%TimeStamp</Type>
<SqlFieldName>DateOfData</SqlFieldName>
</Property>

<Method name="ParseViewsHistory">
<Description>
Extract date and amount of views
{"counts":[{"bucket":1451174400,"total":14,"unique":3}...{"bucket":1450051200,"total":8,"unique":1}],"summary":{"total":258,"unique":20}}</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[html:%String,&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set pos = $find(html,"bucket"":"), num = 0, pos = 1
	while $find(html,"bucket"":",pos){
		set num = num + 1
		set pos = $find(html,"bucket"":",pos), end = $find(html,",",pos)-($length(",")+1)
		set data(num,"date") = $extract(html,pos,end)
		set pos = $find(html,"total"":",pos), end = $find(html,",",pos)-($length(",")+1)
		set data(num,"amount") = $extract(html,pos,end)
		set pos = $find(html,"unique"":",pos), end = $find(html,"}",pos)-($length("}")+1)
		set data(num,"unique") = $extract(html,pos,end)
		}

	Quit 1
]]></Implementation>
</Method>

<Method name="Insert">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	set start = 4070908800, secondsPerDay = 86400, sc = 1
	//$zd((start+date)/86400) = date of sunday - first day of week
	//End of week is saturday, date is seconds from <var>start<var>
	//86400 - senonds in 24 hours
	set num = 1
	while $data(data(num,("date"))){
		if ((start+data(num,"date"))\secondsPerDay)>=(+$horolog){
			set num = num + 1
			Continue
			}
		set dateInternal = $zdt((start+data(num,"date"))\secondsPerDay,3)
		set amount = data(num,"amount")
		set unique = data(num,"unique")
		&sql(Insert Into History.Views (Repository, Amount, UniqueVisitors, DateOfData)
			Values (:data("RepositoryId"), :amount, :unique, :dateInternal))
		set sc = sc!SQLCODE
		Quit:SQLCODE
		set num = num + 1
	}
	kill data
	Quit sc
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^History.ViewsD</DataLocation>
<DefaultData>ViewsDefaultData</DefaultData>
<IdLocation>^History.ViewsD</IdLocation>
<IndexLocation>^History.ViewsI</IndexLocation>
<StreamLocation>^History.ViewsS</StreamLocation>
<Data name="ViewsDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Repository</Value>
</Value>
<Value name="3">
<Value>Amount</Value>
</Value>
<Value name="4">
<Value>Date</Value>
</Value>
<Value name="5">
<Value>Unique</Value>
</Value>
<Value name="6">
<Value>UniqueVisitors</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
